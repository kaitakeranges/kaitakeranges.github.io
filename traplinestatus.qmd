---
title: "Trap Line Status"
subtitle: |
  `r paste('Last refresh: ', strftime(readRDS('date_refreshed.rds')))` <br>
  `r paste('Last record:  ', readRDS('date_trap_status.rds'))`
format: html
---
::: {.grid}

::: {.g-col-12 .g-col-lg-6}
<img src="/Kaitake_Fungi_2.png" class="rounded-image mx-auto d-block" alt="photo of green mushrooms" />
:::
  
::: {.g-col-12 .g-col-lg-6}
<h2 style="text-align:centre;">Trap Line Status</h2>
The target is to have traps checked every 2 weeks. More than 50% of traps checked on a line is considered a minimum for the line status. The table below uses colour coding of;
<ul type = "dot">
  <li>less than 14 Days: green</li>
  <li>14 - 28 Days: yellow</li>
  <li>28+ Days: red</li>
</ul>
Expand any trap line to see who most recently checked, and when.
:::

:::


<hr style="border: 1px '#d2e3f3';">

```{r, echo=FALSE, warning = FALSE}
library(reactable)

df_trap_status_2 <- readRDS("df_trap_status_2.rds")

reactable(
  df_trap_status_2,
  resizable = TRUE,
  defaultPageSize = 30,
  groupBy = "line",
  columns = list(
    rats = colDef(show = FALSE),
    mustelids = colDef(show = FALSE),
    Mustelid_Icons = colDef(show = FALSE),
    Rat_Icons = colDef(show = FALSE),
    line = colDef(name = "Trap Line", minWidth = 200, maxWidth = 200, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
    style = JS(
      "function(rowInfo) {
          if (rowInfo.aggregated) {
            if (rowInfo.values['days_since_over_half'] > 28)
              return { backgroundColor: '#f8d7da', color: '#721c24' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else if (rowInfo.values['days_since_over_half'] > 14)
              return { backgroundColor: '#fff3cd', color: '#856404' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else
              return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
          }
        return {}
      }"
    )),
    no_traps = colDef(aggregate = "max", name = "No Traps", minWidth = 70, maxWidth = 70, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
    style = JS(
      "function(rowInfo) {
          if (rowInfo.aggregated) {
            if (rowInfo.values['days_since_over_half'] > 28)
              return { backgroundColor: '#f8d7da', color: '#721c24' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else if (rowInfo.values['days_since_over_half'] > 14)
              return { backgroundColor: '#fff3cd', color: '#856404' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else
              return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
          }
        return { backgroundColor: '#ffffff', color: '#ffffff'}
      }"
    )),    
    last_over_half = colDef(aggregate = "max", name = "Last Checked (+50% Traps)", minWidth = 100, maxWidth = 100, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
    style = JS(
      "function(rowInfo) {
          if (rowInfo.aggregated) {
            if (rowInfo.values['days_since_over_half'] > 28)
              return { backgroundColor: '#f8d7da', color: '#721c24' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else if (rowInfo.values['days_since_over_half'] > 14)
              return { backgroundColor: '#fff3cd', color: '#856404' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else
              return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
          }
        return { backgroundColor: '#ffffff', color: '#ffffff'}
      }"
    )),
    days_since_over_half = colDef(aggregate = "max", name = "Days Since Checked (+50% Traps)", minWidth = 90, maxWidth = 90, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
    style = JS(
      "function(rowInfo) {
          if (rowInfo.aggregated) {
            if (rowInfo.values['days_since_over_half'] > 28)
              return { backgroundColor: '#f8d7da', color: '#721c24' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else if (rowInfo.values['days_since_over_half'] > 14)
              return { backgroundColor: '#fff3cd', color: '#856404' , borderRight : '1px solid rgba(255, 255, 255, 1)'};
            else
              return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
          }
        return { backgroundColor: '#ffffff', color: '#ffffff'}
      }"
    )),
    record_date = colDef(name = "Date Checked", minWidth = 90, maxWidth = 90, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
    style = JS(
      "function(rowInfo) {
          if (rowInfo.aggregated) {
            if (rowInfo.values['days_since_over_half'] > 28)
              return { backgroundColor: '#f8d7da', color: '#721c24', borderRight : '1px solid rgba(255, 255, 255, 1)' };
            else if (rowInfo.values['days_since_over_half'] > 14)
              return { backgroundColor: '#fff3cd', color: '#856404', borderRight : '1px solid rgba(255, 255, 255, 1)' };
            else
              return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
    }
      return { backgroundColor: '#047C90', color: '#d2e3f3', borderRight : '1px solid rgba(255, 255, 255, 1)'}
      }"
    )),
    days_since = colDef(name = "Days Since Checked", minWidth = 90, maxWidth = 100, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
      style = JS(
        "function(rowInfo) {
            if (rowInfo.aggregated) {
              if (rowInfo.values['days_since_over_half'] > 28)
                return { backgroundColor: '#f8d7da', color: '#721c24', borderRight : '1px solid rgba(255, 255, 255, 1)' };
              else if (rowInfo.values['days_since_over_half'] > 14)
                return { backgroundColor: '#fff3cd', color: '#856404', borderRight : '1px solid rgba(255, 255, 255, 1)' };
              else
                return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
      }
        return { backgroundColor: '#047C90', color: '#d2e3f3', borderRight : '1px solid rgba(255, 255, 255, 1)'}
        }"
    )),
    traps = colDef(name = "Checks", minWidth = 80, maxWidth = 80, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
      style = JS(
        "function(rowInfo) {
            if (rowInfo.aggregated) {
              if (rowInfo.values['days_since_over_half'] > 28)
                return { backgroundColor: '#f8d7da', color: '#721c24', borderRight : '1px solid rgba(255, 255, 255, 1)' };
              else if (rowInfo.values['days_since_over_half'] > 14)
                return { backgroundColor: '#fff3cd', color: '#856404', borderRight : '1px solid rgba(255, 255, 255, 1)' };
              else
                return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
      }
        return { backgroundColor: '#047C90', color: '#d2e3f3', borderRight : '1px solid rgba(255, 255, 255, 1)'}
        }"
    )),
      Trapper_anon = colDef(name = "Trapper", minWidth = 110, maxWidth = 110, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
        style = JS(
          "function(rowInfo) {
            if (rowInfo.aggregated)
              return {}
            else
              return {backgroundColor: '#047C90', color: '#d2e3f3', borderRight : '1px solid rgba(255, 255, 255, 1)'}
          }"
        )
      ),
    Catch_Icons = colDef(name = "Catches", minWidth = 200, html = TRUE, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
        style = JS(
          "function(rowInfo) {
            if (rowInfo.aggregated)
              return {}
            else
              return {backgroundColor: '#047C90', color: '#d2e3f3', borderRight : '1px solid rgba(255, 255, 255, 1)'}
          }"
        )),
    line_map = colDef(aggregate = "max", name = "Map", 
                      cell = function(value, index, name, row){
                        if (!is.null(row) && !is.null(row$.grouped) && row$.grouped) {
                          max(df_trap_status_2$line_map[df_trap_status_2$map == row$map])
                        } else{
                          ""
                        }
                      },
                      minWidth = 105, html = TRUE, headerStyle = list(backgroundColor = '#047C90', color= '#d2e3f3'),
        style = JS(
        "function(rowInfo) {
            if (rowInfo.aggregated) {
              if (rowInfo.values['days_since_over_half'] > 28)
                return { backgroundColor: '#f8d7da', color: '#721c24', borderRight : '1px solid rgba(255, 255, 255, 1)' };
              else if (rowInfo.values['days_since_over_half'] > 14)
                return { backgroundColor: '#fff3cd', color: '#856404', borderRight : '1px solid rgba(255, 255, 255, 1)' };
              else
                return { backgroundColor: '#d4edda', color: '#155724', borderRight : '1px solid rgba(255, 255, 255, 1)' };
      }
        return { backgroundColor: '#ffffff', color: '#ffffff'}
        }"
        ))
  ),
  defaultSorted = list("days_since_over_half" = "asc", "record_date" = "desc"),
  theme = reactableTheme(
    tableStyle = list(className = "trapstatus-reactable")
  )
)

```

<hr style="border: 1px '#d2e3f3';">

<br />

```{r, echo=FALSE, warning = FALSE, message = FALSE}
library(ggplot2)
library(dplyr)


df_trap_checks <- readRDS("df_trap_checks.rds")

df_trap_checks$tempvar <- "Traps Check Status"

trap_status_map <- ggplot(
  data = df_trap_checks,
  aes(x = longitude, y = latitude),
  color = "grey"
) + geom_point() +
  geom_point(
    data = df_trap_checks %>% filter(color == "green"),
    aes(x = longitude, y = latitude),
    color = "green", size = 2
  ) +
  geom_point(
    data = df_trap_checks %>% filter(color == "orange"),
    aes(x = longitude, y = latitude),
    color = "orange", size = 2
  ) +
  geom_point(
    data = df_trap_checks %>% filter(color == "red"),
    aes(x = longitude, y = latitude),
    color = "red", size = 2
  ) +
  labs(caption = "Age by which traps have been checked") +
  theme_void() +
  theme(panel.background = element_rect(fill = "lightgrey")) +
  facet_grid(. ~tempvar) +
  theme(strip.background = element_rect(fill = "#053660", color = "#053660"),
        strip.text = element_text(size = 16, color = "#d2e3f3"))

trap_status_map
```